# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master
variables:
  - group: fsp-build-variables
  - group: kbf-run-variables
stages:
- stage: 'CI'
  displayName: 'Build and Push'
  jobs:
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        Python37:
          python.version: '3.7'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    # - script: |
    #     python -m pip install --upgrade pip
    #     pip install -r requirements.txt
    #   displayName: 'Install dependencies'

    - task: GoogleCloudSdkInstaller@0
      inputs:
        version: '306.0.0'

    - task: DownloadSecureFile@1
      name: gcsServiceAccount
      displayName: 'Download GCS Service Account'
      inputs:
        secureFile: 'gcs-service-account.json'

    - task: GcloudRunner@0
      inputs:
        command: 'auth activate-service-account'
        arguments: '--key-file $(gcsServiceAccount.secureFilePath)'
      displayName: 'gcloud auth activate-service-account'

    - task: GsutilRunner@0
      inputs:
        command: 'cp'
        arguments: '$(jobdir.path)/$(kbf.run.id)/model.pkl .'
      displayName: 'gsutil download model.pkl'
      
    - task: GsutilRunner@0
      inputs:
        command: 'cp'
        arguments: '$(jobdir.path)/$(kbf.run.id)/data-proc-obj.pkl .'
      displayName: 'gsutil download data-proc-obj.pkl'

    - script: |
        ls -l .
      displayName: 'List files'

    # - script: |
    #     pip install pytest pytest-azurepipelines
    #     pytest
    #   displayName: 'pytest'
      
    - task: CmdLine@1
      displayName: 'Lock image version in deployment.yaml'
      inputs:
        filename: /bin/bash
        arguments: '-c "awk ''{gsub(\"FUTURE_SALES_PREDICTION_IMAGE\", \"gcr.io/$(docker.image.name):$(Build.BuildId)\", $0); print}'' deployment.yaml > $(Build.ArtifactStagingDirectory)/deployment.yaml"'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'facileai-dev-gcr'
    #     repository: '$(docker.image.name)'
    #     command: 'buildAndPush'
    #     Dockerfile: 'dockerfile'
        
- stage: 'Dev'
  displayName: 'Dev'
  dependsOn: 'CI'
  jobs:
  - deployment:
    displayName: 'Deployment to GCP K8s Dev'
    environment: 'facileai-dev-k8s.default'
    variables:
    - group: 'fsp-release-variables'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: replacetokens@3
            inputs:
              rootDirectory: '$(Pipeline.Workspace)'
              targetFiles: 'drop/deployment.yaml'
              encoding: 'auto'
              writeBOM: true
              actionOnMissing: 'warn'
              keepToken: false
              tokenPrefix: '{{'
              tokenSuffix: '}}'
              useLegacyPattern: false
              enableTransforms: false
              enableTelemetry: true
              
          - script: |
              echo $(Pipeline.Workspace)
              pwd
              ls -l 
            displayName: 'List files'
            
          - script: |
              echo $(Pipeline.Workspace)
              pwd
              ls -l
            displayName: 'PWD'

          - task: KubernetesManifest@0
            displayName: 'kubectl apply'
            inputs:
              action: 'deploy'
              manifests: |
                '$(Pipeline.Workspace)/drop/deployment.yaml'
          


